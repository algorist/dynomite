#!/usr/bin/env python
#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

import Dynomite
from ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host:port] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  GetResult get(Data key)'
  print '  i32 put(Data key, ContextData context, Data data)'
  print '  i32 has(Data key)'
  print '  i32 remove(Data key)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':') 
  host = parts[0]
  port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':') 
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = Dynomite.Client(protocol)
transport.open()

if cmd == 'get':
  if len(args) != 1:
    print 'get requires 1 args'
    sys.exit(1)
  pp.pprint(client.get(eval(args[0]),))

elif cmd == 'put':
  if len(args) != 3:
    print 'put requires 3 args'
    sys.exit(1)
  pp.pprint(client.put(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'has':
  if len(args) != 1:
    print 'has requires 1 args'
    sys.exit(1)
  pp.pprint(client.has(eval(args[0]),))

elif cmd == 'remove':
  if len(args) != 1:
    print 'remove requires 1 args'
    sys.exit(1)
  pp.pprint(client.remove(eval(args[0]),))

transport.close()
